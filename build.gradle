plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.8'
	id 'io.spring.dependency-management' version '1.1.5'
}

group = 'com.flare'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/snapshot' }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-cache'
	implementation 'org.springframework.boot:spring-boot-starter-web-services'
	implementation 'org.springframework.boot:spring-boot-starter-logging'
	implementation 'org.springframework.boot:spring-boot-starter-aop'

	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.3'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'

	implementation 'com.sun.mail:jakarta.mail:2.0.1' //email
	implementation 'org.apache.poi:poi-ooxml:5.2.0'  //excel

	//webService
	implementation 'org.apache.axis2:axis2-adb:1.8.2'
	implementation 'org.apache.axis2:axis2-transport-http:1.8.2'
	implementation 'org.apache.axis2:axis2-transport-local:1.8.2'
	implementation 'javax.activation:activation:1.1'

	implementation 'com.google.code.gson:gson:2.8.9'
	implementation 'org.apache.commons:commons-text:1.10.0'
	implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.15.2'
	implementation 'com.github.ulisesbocchio:jasypt-spring-boot-starter:3.0.3'
	implementation 'com.github.pagehelper:pagehelper-spring-boot-starter:2.1.0'
	implementation 'org.ehcache:ehcache:3.10.8'
	implementation 'javax.cache:cache-api:1.1.1'
	implementation 'org.dom4j:dom4j:2.1.4'

	implementation 'org.hibernate.orm:hibernate-core:6.5.2.Final'
	implementation 'com.querydsl:querydsl-jpa:5.1.0'
	implementation 'org.modelmapper:modelmapper:3.2.0'
	implementation 'org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4.1:1.16'

	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'org.postgresql:postgresql:42.7.3'
	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor 'com.querydsl:querydsl-apt:5.1.0'
	annotationProcessor 'jakarta.annotation:jakarta.annotation-api:3.0.0'
	annotationProcessor 'jakarta.persistence:jakarta.persistence-api:3.1.0'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:3.0.3'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

def generated = 'src/main/generated'

tasks.withType(JavaCompile) {
	options.generatedSourceOutputDirectory = file(generated)
}

sourceSets {
	main.java.srcDirs += '$projectDir/build/generated'
}

bootRun {
	jvmArgs ['-Djasypt.encryptor.password=ThisisWebFrameworkSecurityKey']
}

clean {
	delete file(generated)
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
}

tasks.withType(Javadoc) {
	options.encoding = 'UTF-8'
}


